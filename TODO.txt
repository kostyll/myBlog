1. install virtualenv virtualenvwrapper virtualenvwrapper.project
 - for example $pip install virtualenv virtualenvwrapper virtualenvwrapper.project - {to install pip use git clone http://github.com/p.....}
2. make project with mkvirtualenv
	- mkvirtualenv <envname>
	- workon <envname> | cdproject| cdvirtualenv | deactivate
3. install required python-libraries : {simplejson, django, django-tinymce, django-ckeditor, django_extensions....}
4. make new project:
	django-admin.py startproject | startapp .....
5. make useful tools :
	./manage.py runfcgi host=127.0.0.1 port=8080 debug=True --verbosity=3
	ps aux |grep "[p]ython ./manage.py runfcgi" |grep -E "^([a-z0-9]{1,}[^0-9]+)([0-9]+)" -o |grep -E "[0-9]+$" -o |head -n 1 > kill.pid
	kill -KILL `cat kill.pid`
	echo>kill.pid 
	ps aux | grep "[p]ython ./manage.py runfcgi"
	git push git@github.com:kostyll/myBlog.git master
6. make ./manage.py collectstatic
7. make git repo at the github.com
	git pull git@github.com:kostyll/myBlog.git master
	git push git@github.com:kostyll/myBlog.git master
	The algo is the next:
		- git init <dir>
		- git add <files>
		- git commit -am "Comment"
		- git pull git@github.com:<user>/<repo>.git <master{branch}>
			- make some changes in your code
			- git commit ...
			- git push ....

cat /etc/nginx/sites-available/Blog.conf 
server {
    listen 80;
    server_name myhostname.com;
    access_log /var/log/nginx/Blog.access.log;
    error_log /var/log/nginx/Blog_project.error.log;

    # https://docs.djangoproject.com/en/dev/howto/static-files/#serving-static-files-in-production
    location /static/ { # STATIC_URL
        alias /home/andrew/workspace/myBlog/static/; # STATIC_ROOT
        expires 30d;
    }

    location /media/ { # MEDIA_URL
        alias /home/andrew/workspace/myBlog/media/; # MEDIA_ROOT
        expires 30d;
    }
    
    location /templates/ { # TEMPLATES
        alias /home/andrew/workspace/myBlog/templates/;
	expires 30d;
    }	


    location / {
        include fastcgi_params;
        fastcgi_pass 127.0.0.1:8080;
 	fastcgi_split_path_info ^()(.*)$;
    }
}


THE tasks in blog:
0. Добавить авторизацию в блог + на выводе коментов ссылку на автора.+
1. Make|DownLoad-Edit good design - template+
2. Add several flatpages {Про, Контакты{google-maps}, |Блог|, Сервисы }+
3. Add ability of django-social-auth
4. add ability of using social-rank-systems (likes in vk,fb,tw)+
5. Добавить возможность кеширования и сжатия 
	-http://habrahabr.ru/post/142241/
6. Добавить возможность проведения платежей Privat24, LiqPay, Robokassa
	- http://www.roboxchange.com/
7. добавить регистрацию
8. add django-tool-bar + 
9. !!! Отредактировать нормальный контент - выложить на хостинг - только после этого появится возможность устанавливать социальные сервисы...
10. Возможность CAPTCHA при регистрации
11. Добавить возможность скрытия поста от пользователей (user-visible )
12. Добавить возможность поиска sphinx
13. Довавить теги - фильтр по тегам
14. Добавить категории


